@model capstone.Models.recensioni

@{
    ViewBag.Title = "modificarecensione";
}

<h2>modificarecensione</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal d-flex flex-column align-items-center">
        <h4>recensioni</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idrecensioni)

        <div class="form-group">
            @Html.LabelFor(model => model.valutazione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.valutazione, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.valutazione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descrizione, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.descrizione, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.titolo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titolo, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.titolo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>