@model capstone.Models.utenti

@{
    ViewBag.Title = "signup";
}

<h2>REGISTRATI</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal d-flex flex-column align-items-center">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>   <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.password, new { type = "password", @class = "" })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confermapassword, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.confermapassword, new { type = "password", @class = "" })
                @Html.ValidationMessageFor(model => model.confermapassword, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.password != null)
        {
            <p class="text-danger"> @ViewBag.password</p>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.residenza, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.residenza, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.residenza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.citta, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.citta, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.citta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numeroditelefono, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroditelefono, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.numeroditelefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codicefiscale, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codicefiscale, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.codicefiscale, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (TempData["Successo"] != null)
        {
            <p class="text-success">@TempData["Successo"]</p>
        }
        else if (ViewBag.errore != null)
        {
            <p class="text-danger">@ViewBag.errore</p>
        }
    </div> <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="registrati" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}