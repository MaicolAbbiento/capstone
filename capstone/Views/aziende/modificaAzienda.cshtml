@model capstone.Models.aziende

@{
    ViewBag.Title = "aggiungicollaboratore1";
}

<h2>aggiungicollaboratore1</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal d-flex flex-column align-items-center">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nomeazienda, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomeazienda, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.nomeazienda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.piva, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.piva, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.piva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Paese, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Paese, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.Paese, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.citta, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.citta, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.citta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.provinca, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.provinca, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.provinca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CAP, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CAP, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.CAP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telfonoaziendale, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telfonoaziendale, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.telfonoaziendale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoria.categoria, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.categoria.categoria, new SelectList(ViewBag.categoria, "Value", "Text"), new { @class = "  " })
                @Html.ValidationMessageFor(model => model.categoria.categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}