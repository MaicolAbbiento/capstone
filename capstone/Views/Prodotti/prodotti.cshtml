@model capstone.Models.prodotti

@{
    ViewBag.Title = "prodotti";
}

<h2>prodotti</h2>

@using (Html.BeginForm("prodotti", "Prodotti", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "w-50 mx-auto" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal d-flex flex-wrap align-items-center">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fotoprodotto, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.fotoprodotto, new { @class = "", type = "file", @accept = "image/*" })
                @Html.ValidationMessageFor(model => model.fotoprodotto, "", new { @class = "text-danger" })
                <p class="text-danger">@ViewBag.fotoprodotto</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nomeprodotto, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomeprodotto, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.nomeprodotto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prezzo, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prezzo, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.prezzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prodottiinmagazzino, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prodottiinmagazzino, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.prodottiinmagazzino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoria.categoria, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.categoria.categoria, new SelectList(ViewBag.categoria, "Value", "Text"), new { @class = "input" })
                @Html.ValidationMessageFor(model => model.categoria.categoria, "", new { @class = "text-danger" })
            </div>
        </div>


    </div> 
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>